Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./password.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./Application2.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcmp.o)
                              ./Application2.o (strcmp)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./lcd.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

recived_open        0x6               ./Application2.o
recived_new         0x6               ./Application2.o
recived_change      0x6               ./Application2.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./Application2.o
LOAD ./Ex_EEPROM_I2C_24c256.o
LOAD ./dcmotor.o
LOAD ./i2c.o
LOAD ./keypad.o
LOAD ./lcd.o
LOAD ./password.o
LOAD ./timer0_normal.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x966
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./Application2.o
 .text          0x00000092        0x0 ./Ex_EEPROM_I2C_24c256.o
 .text          0x00000092        0x0 ./dcmotor.o
 .text          0x00000092        0x0 ./i2c.o
 .text          0x00000092        0x0 ./keypad.o
 .text          0x00000092        0x0 ./lcd.o
 .text          0x00000092        0x0 ./password.o
 .text          0x00000092        0x0 ./timer0_normal.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x00000092      0x1fc ./Application2.o
                0x00000092                main
 .text.EEPROM_Read_Byte
                0x0000028e       0x92 ./Ex_EEPROM_I2C_24c256.o
                0x0000028e                EEPROM_Read_Byte
 .text.EEPROM_Write_Byte
                0x00000320       0x70 ./Ex_EEPROM_I2C_24c256.o
                0x00000320                EEPROM_Write_Byte
 .text.EEPROM_Init
                0x00000390        0x6 ./Ex_EEPROM_I2C_24c256.o
                0x00000390                EEPROM_Init
 .text.DCMOTOR_Init
                0x00000396        0xc ./dcmotor.o
                0x00000396                DCMOTOR_Init
 .text.DCMOTOR_onClockWise
                0x000003a2       0x26 ./dcmotor.o
                0x000003a2                DCMOTOR_onClockWise
 .text.DCMOTOR_onAntiClockWise
                0x000003c8       0x26 ./dcmotor.o
                0x000003c8                DCMOTOR_onAntiClockWise
 .text.DCMOTOR_stop
                0x000003ee        0x8 ./dcmotor.o
                0x000003ee                DCMOTOR_stop
 .text.TWI_Init
                0x000003f6        0xe ./i2c.o
                0x000003f6                TWI_Init
 .text.TWI_Start
                0x00000404        0xc ./i2c.o
                0x00000404                TWI_Start
 .text.TWI_Stop
                0x00000410        0x6 ./i2c.o
                0x00000410                TWI_Stop
 .text.TWI_Write
                0x00000416        0xe ./i2c.o
                0x00000416                TWI_Write
 .text.TWI_Read_With_ACK
                0x00000424        0xe ./i2c.o
                0x00000424                TWI_Read_With_ACK
 .text.TWI_Read_With_NACK
                0x00000432        0xe ./i2c.o
                0x00000432                TWI_Read_With_NACK
 .text.TWI_Get_Status
                0x00000440        0x6 ./i2c.o
                0x00000440                TWI_Get_Status
 .text.KeyPad_4x4_adjustKeyNumber
                0x00000446       0x84 ./keypad.o
                0x00000446                KeyPad_4x4_adjustKeyNumber
 .text.KeyPad_getPressedKey
                0x000004ca       0x64 ./keypad.o
                0x000004ca                KeyPad_getPressedKey
 .text.LCD_sendCommand
                0x0000052e       0x50 ./lcd.o
                0x0000052e                LCD_sendCommand
 .text.LCD_init
                0x0000057e       0x26 ./lcd.o
                0x0000057e                LCD_init
 .text.LCD_displayCharacter
                0x000005a4       0x50 ./lcd.o
                0x000005a4                LCD_displayCharacter
 .text.LCD_displayString
                0x000005f4       0x26 ./lcd.o
                0x000005f4                LCD_displayString
 .text.LCD_goToRowColumn
                0x0000061a       0x26 ./lcd.o
                0x0000061a                LCD_goToRowColumn
 .text.LCD_displayStringRowColumn
                0x00000640       0x16 ./lcd.o
                0x00000640                LCD_displayStringRowColumn
 .text.LCD_clearScreen
                0x00000656        0x8 ./lcd.o
                0x00000656                LCD_clearScreen
 .text.LCD_intgerToString
                0x0000065e       0x44 ./lcd.o
                0x0000065e                LCD_intgerToString
 .text.compareTwoPasswords
                0x000006a2       0x34 ./password.o
                0x000006a2                compareTwoPasswords
 .text.prepareToSend
                0x000006d6       0x34 ./password.o
                0x000006d6                prepareToSend
 .text.getPassword
                0x0000070a       0x82 ./password.o
                0x0000070a                getPassword
 .text.timer0_init_normal_mode
                0x0000078c       0x12 ./timer0_normal.o
                0x0000078c                timer0_init_normal_mode
 .text.__vector_9
                0x0000079e       0x38 ./timer0_normal.o
                0x0000079e                __vector_9
 .text.UART_init
                0x000007d6       0x14 ./uart.o
                0x000007d6                UART_init
 .text.UART_sendByte
                0x000007ea        0x8 ./uart.o
                0x000007ea                UART_sendByte
 .text.UART_recieveByte
                0x000007f2        0x8 ./uart.o
                0x000007f2                UART_recieveByte
 .text.UART_sendString
                0x000007fa       0x1a ./uart.o
                0x000007fa                UART_sendString
 .text.UART_receiveString
                0x00000814       0x2e ./uart.o
                0x00000814                UART_receiveString
 .text.__vector_11
                0x00000842       0x84 ./uart.o
                0x00000842                __vector_11
 .text.libgcc   0x000008c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000008c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000008c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000008c6       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcmp.o)
                0x000008c6                strcmp
 .text.avr-libc
                0x000008d8       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x000008d8                itoa
 .text.avr-libc
                0x0000091a       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x0000091a                strrev
 .text.libgcc   0x0000093a       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x0000093a                __udivmodhi4
                0x00000962                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000962        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000962                exit
                0x00000962                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000962        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000966                _etext = .

.data           0x00800060       0x12 load address 0x00000966
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./Application2.o
 .data          0x00800060        0x0 ./Ex_EEPROM_I2C_24c256.o
 .data          0x00800060        0x0 ./dcmotor.o
 .data          0x00800060        0x0 ./i2c.o
 .data          0x00800060        0x0 ./keypad.o
 .data          0x00800060        0x0 ./lcd.o
 .data          0x00800060       0x11 ./password.o
 .data          0x00800071        0x0 ./timer0_normal.o
 .data          0x00800071        0x0 ./uart.o
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00800071        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800072                . = ALIGN (0x2)
 *fill*         0x00800071        0x1 00
                0x00800072                _edata = .
                0x00800072                PROVIDE (__data_end, .)

.bss            0x00800072       0x15
                0x00800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800072        0x0 ./Application2.o
 .bss           0x00800072        0x0 ./Ex_EEPROM_I2C_24c256.o
 .bss           0x00800072        0x0 ./dcmotor.o
 .bss           0x00800072        0x0 ./i2c.o
 .bss           0x00800072        0x0 ./keypad.o
 .bss           0x00800072        0x0 ./lcd.o
 .bss           0x00800072        0x0 ./password.o
 .bss           0x00800072        0x0 ./timer0_normal.o
 .bss           0x00800072        0x0 ./uart.o
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.g_choice  0x00800072        0x1 ./Application2.o
                0x00800072                g_choice
 .bss.second    0x00800073        0x1 ./Application2.o
                0x00800073                second
 .bss.g_tick    0x00800074        0x1 ./timer0_normal.o
                0x00800074                g_tick
 *(COMMON)
 COMMON         0x00800075       0x12 ./Application2.o
                0x00800075                recived_open
                0x0080007b                recived_new
                0x00800081                recived_change
                0x00800087                PROVIDE (__bss_end, .)
                0x00000966                __data_load_start = LOADADDR (.data)
                0x00000978                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800087        0x0
                0x00800087                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800087                PROVIDE (__noinit_end, .)
                0x00800087                _end = .
                0x00800087                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SecurityMc2.elf elf32-avr)
LOAD linker stubs
